{"version":3,"sources":["components/product.js","components/products.js","components/home.js","App.js","components/topbar.js","components/viewProduct.js","components/addProduct.js","components/login.js","serviceWorker.js","index.js"],"names":["Product","react_default","a","createElement","Panel","Heading","Title","componentClass","this","props","produto","nome","Body","ListGroup","ListGroupItem","categoria","fabricante","situacao","Link","to","id","Component","Products","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","products","setState","codigoDeBarras","Col","md","product","key","Grid","map","renderCard","Home","App","className","home","TopBar","logout","bind","assertThisInitialized","isLogged","logged","localStorage","getItem","removeItem","alert","document","location","reload","Navbar","Header","Brand","src","style","width","marginTop","height","alt","Nav","pullRight","NavItem","eventKey","href","Button","type","onClick","ViewProduct","produtoFake","AddProduct","getSelectValue","console","log","ReactDOM","findDOMNode","select","value","handleChangeNome","handleChangeCodigoBarras","handleChangeFabricante","handleChangeCategoria","addProduct","codigoBarras","e","target","_this2","FormGroup","controlId","ControlLabel","FormControl","marginBottom","placeholder","onChange","Feedback","ref","bsStyle","Login","handleChangeUsername","handleChangePassword","login","username","password","isAdmin","setItem","Row","xs","alignContent","Boolean","window","hostname","match","routing","BrowserRouter","topbar","Switch","Route","exact","path","component","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6edada5.chunk.js","sourcesContent":["import React, { Component,Button} from 'react';\nimport { Panel,ListGroup,ListGroupItem} from 'react-bootstrap';\nimport {Link} from 'react-router-dom'\n\nclass Product extends Component {\n\n  render() {\n    return (\n      <div>\n        <Panel>\n          <Panel.Heading>\n          <Panel.Title componentClass=\"h3\"> {this.props.produto.nome} </Panel.Title>\n            \n          \n          \n          </Panel.Heading>\n          <Panel.Body>\n            <ListGroup>\n              <ListGroupItem>{this.props.produto.categoria}</ListGroupItem>\n            </ListGroup>\n\n           <p>Fabricante: {this.props.produto.fabricante}</p>\n           <p> Situação: {this.props.produto.situacao}</p>\n\n\n         <Link to={'ViewProduct/' + this.props.produto.id}>Ver Mais</Link>\n\n\n\n          </Panel.Body>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default Product;","import React, { Component } from 'react';\nimport { Grid,  Col } from 'react-bootstrap';\nimport Product from './product';\n\nclass Products extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      products: []\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ products:[\n      {id: 1, nome: 'Talco', codigoDeBarras: 1234, fabricante: 'Johnson', situacao: 'Disponivel',categoria : 'Higiene'},\n      {id: 2, nome: 'Paracetamol', codigoDeBarras: 1234, fabricante: 'Bayer', situacao: 'Disponivel',categoria : 'Drogas'},\n      {id: 3, nome: 'Paracetamol', codigoDeBarras: 1234, fabricante: 'Bayer', situacao: 'Disponivel',categoria : 'Drogas'},\n      {id: 4, nome: 'Paracetamol', codigoDeBarras: 1234, fabricante: 'Bayer', situacao: 'Disponivel',categoria : 'Drogas'},\n      {id: 5, nome: 'Paracetamol', codigoDeBarras: 1234, fabricante: 'Bayer', situacao: 'Disponivel',categoria : 'Drogas'},\n      {id: 6, nome: 'Paracetamol', codigoDeBarras: 1234, fabricante: 'Bayer', situacao: 'Disponivel',categoria : 'Drogas'},\n    \n    ] });\n\n  }\n\nrenderCard(produto){\n  return <Col md={3}> <Product produto={produto} key={produto.id} /> </Col>\n}\n\n\n  render() {\n    return (\n      <Grid>\n\n        {this.state.products.map(this.renderCard)}\n        \n        </Grid>\n        \n    );\n  }\n}\n\nexport default Products;\n","import React, { Component } from 'react';\nimport Products from './products';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <Products />\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './components/home';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Home />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Navbar, Nav, NavItem ,Button} from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom'\n\n\n \nclass TopBar extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.logout = this.logout.bind(this);\n    this.isLogged = this.isLogged.bind(this);\n\n    this.state ={\n      logged : false\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({logged: this.isLogged()});\n  }\n\n  isLogged(){\n    return localStorage.getItem('user');\n  }\n\n\n  logout (){\n\n    localStorage.removeItem('user');\n    localStorage.removeItem('admin');\n    this.setState({logged: false});\n\n    alert('Logout efetuado com Sucesso!');\n    document.location.reload(true);\n   \n\n\n  }\n\n\n  render () {\n    return (\n      <div>\n        <Navbar>\n          <Navbar.Header>\n            <Navbar.Brand>\n            <img src= '/images/cpharma.png' style={{width:180, marginTop: -7, height:80}} alt=\"CCC Pharma\" />\n            </Navbar.Brand>\n          </Navbar.Header>\n\n          <Nav pullRight>\n            <NavItem eventKey={1} href=\"/\">\n              Home\n            </NavItem>\n\n            { localStorage.getItem(\"admin\") &&\n            <NavItem eventKey={2} href=\"/AddProduct\">\n              Cadastrar Produto\n            </NavItem>\n            }\n\n            {\n            !this.state.logged ?\n              <NavItem eventKey={3} href=\"/Login\">\n              Login\n            </NavItem>\n\n            :\n            <NavItem eventKey={4} >\n            <Button  type='submit' onClick={this.logout}>Logout</Button>\n          </NavItem>\n\n          }\n            \n          \n\n\n\n          </Nav>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default TopBar;","import React, { Component } from 'react';\r\nimport { Grid,Panel, ListGroup, ListGroupItem } from 'react-bootstrap';\r\n\r\n\r\nclass ViewProduct extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.id = props.id;\r\n\r\n        this.state = {\r\n            produto: \"\"\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        // Aqui um Fetch pra pegar o Produto pelo o ID do Back e setar aqui abaixo\r\n\r\n        const produtoFake = {id: 1, nome: 'Talco', codigoDeBarras: 1234, fabricante: 'Johnson', situacao: 'Disponivel',categoria : 'Higiene'};\r\n\r\n\r\n        // Atualizar Produto Fake pelo Produto recebido do Back\r\n        this.setState({produto: produtoFake});\r\n    \r\n      }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Grid>\r\n\r\n            <Panel>\r\n                <Panel.Heading>\r\n                    <Panel.Title componentClass=\"h3\"> {this.state.produto.nome} </Panel.Title>\r\n\r\n                </Panel.Heading>\r\n                <Panel.Body>\r\n                    <ListGroup>\r\n                        <ListGroupItem>{this.state.produto.categoria}</ListGroupItem>\r\n                    </ListGroup>\r\n\r\n                    <p>Fabricante: {this.state.produto.fabricante}</p>\r\n                    {localStorage.getItem('admin') &&\r\n                <p>Código de Barras : {this.state.produto.codigoDeBarras}</p>\r\n                \r\n                }\r\n                    <p> Situação: {this.state.produto.situacao}</p>\r\n\r\n\r\n                </Panel.Body>\r\n            </Panel>\r\n            </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ViewProduct;","import React, { Component } from 'react';\r\nimport { Grid, FormGroup, ControlLabel, FormControl, Button } from 'react-bootstrap';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass AddProduct extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.id = props.id;\r\n        this.handleChangeNome = this.handleChangeNome.bind(this);\r\n        this.handleChangeCodigoBarras = this.handleChangeCodigoBarras.bind(this);\r\n        this.handleChangeFabricante = this.handleChangeFabricante.bind(this);\r\n        this.handleChangeCategoria = this.handleChangeCategoria.bind(this);\r\n        this.addProduct = this.addProduct.bind(this);\r\n\r\n\r\n        this.state = {\r\n            nome: '',\r\n            codigoBarras: '',\r\n            fabricante: '',\r\n            categoria: '',\r\n            situacao: ''\r\n        };\r\n    }\r\n\r\n    \r\n\r\n    addProduct(){\r\n        \r\n        const product = {\r\n            nome: this.state.nome,\r\n            codigoBarras: this.state.codigoBarras,\r\n            fabricante: this.state.fabricante,\r\n            categoria:this.state.categoria,\r\n            situacao: this.state.situacao\r\n        };\r\n\r\n    }\r\n\r\n    handleChangeNome(e) {\r\n        this.setState({ nome: e.target.value });\r\n    }\r\n    handleChangeCodigoBarras(e) {\r\n        this.setState({ codigoBarras: e.target.value });\r\n    }\r\n    handleChangeFabricante(e) {\r\n        this.setState({ fabricante: e.target.value });\r\n    }\r\n    handleChangeCategoria(e) {\r\n        this.setState({ categoria: e.target.value });\r\n    }\r\n\r\n    getSelectValue = () => {\r\n        console.log(ReactDOM.findDOMNode(this.select).value)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Grid>\r\n                <form>\r\n                    <FormGroup\r\n                        controlId=\"nomeProduto\"\r\n\r\n                    >\r\n                        <ControlLabel>Nome do Produto</ControlLabel>\r\n                        <FormControl\r\n                            style={{ marginBottom: 10 }}\r\n                            type=\"text\"\r\n                            value={this.state.nome}\r\n                            placeholder=\"Digite o nome do Produto ...\"\r\n                            onChange={this.handleChangeNome}\r\n                        />\r\n                        <FormControl.Feedback />\r\n\r\n                    </FormGroup>\r\n\r\n                    <FormGroup\r\n                        controlId=\"codigoBarras\"\r\n\r\n                    >\r\n\r\n\r\n                        <ControlLabel>Código de Barras</ControlLabel>\r\n                        <FormControl\r\n                            style={{ marginBottom: 10 }}\r\n                            type=\"text\"\r\n                            value={this.state.codigoBarras}\r\n                            placeholder=\"Digite o Código de Barras ...\"\r\n                            onChange={this.handleChangeCodigoBarras}\r\n                        />\r\n                        <FormControl.Feedback />\r\n\r\n                    </FormGroup>\r\n\r\n                    <FormGroup\r\n                        controlId=\"fabricante\"\r\n\r\n                    >\r\n\r\n\r\n                        <ControlLabel>Fabricante</ControlLabel>\r\n                        <FormControl\r\n                            style={{ marginBottom: 10 }}\r\n                            type=\"text\"\r\n                            value={this.state.fabricante}\r\n                            placeholder=\"Digite o Nome do Fabricante ...\"\r\n                            onChange={this.handleChangeFabricante}\r\n                        />\r\n                        <FormControl.Feedback />\r\n\r\n                    </FormGroup>\r\n\r\n                    <FormGroup\r\n                        controlId=\"categoria\"\r\n\r\n                    >\r\n\r\n\r\n                        <ControlLabel>Categoria</ControlLabel>\r\n                        <FormControl\r\n                            style={{ marginBottom: 10 }}\r\n                            type=\"text\"\r\n                            value={this.state.categoria}\r\n                            placeholder=\"Digite o Nome da Categoria ...\"\r\n                            onChange={this.handleChangeCategoria}\r\n                        />\r\n                        <FormControl.Feedback />\r\n\r\n                    </FormGroup>\r\n\r\n\r\n                    <FormGroup controlId=\"formControlsSelect\">\r\n                        <ControlLabel >Situação</ControlLabel>\r\n                        <FormControl\r\n                            componentClass=\"select\"\r\n                            placeholder=\"select\"\r\n                            ref={select => { this.select = select }}\r\n\r\n                        >\r\n                            <option value=\"Disponível\">Disponível</option>\r\n                            <option value=\"Indisponível\">Indisponível</option>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n\r\n                    <Button\r\n                        bsStyle=\"primary\"\r\n                        type=\"submit\"\r\n                        onClick={this.getSelectValue}>\r\n\r\n                        Cadastrar\r\n                    </Button>\r\n\r\n                </form>\r\n\r\n            </Grid>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AddProduct;","import React, { Component } from 'react';\r\nimport { Panel, Col, Row, Grid, FormControl, FormGroup, Button } from 'react-bootstrap';\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChangeUsername = this.handleChangeUsername.bind(this);\r\n        this.handleChangePassword= this.handleChangePassword.bind(this);\r\n        this.login = this.login.bind(this);\r\n\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            isAdmin: false\r\n        };\r\n    }\r\n\r\n    handleChangeUsername(e) {\r\n        this.setState({ username: e.target.value });\r\n    }\r\n    handleChangePassword(e) {\r\n        this.setState({ password: e.target.value });\r\n    }\r\n\r\n\r\n    login(){\r\n        \r\n        if(this.state.username === 'yally' && this.state.password === '1234'){\r\n            localStorage.setItem('user',this.state.username);\r\n            localStorage.setItem('admin',true);\r\n            alert(\"Login realizado com Sucesso!\");\r\n        }\r\n\r\n        else{\r\n            localStorage.setItem('user',this.state.username);\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid>\r\n\r\n\r\n\r\n                    <Row className=\"show-grid\" style={{marginTop:40}}>\r\n\r\n                        <Col xs={6} md={4} style={{ alignContent: 'center' }}></Col>\r\n                        <Col xs={8} md={4} style={{ alignContent: 'center' }}>\r\n                            <Panel >\r\n                                <Panel.Heading>\r\n                                    <Panel.Title componentClass=\"h3\"> Login </Panel.Title>\r\n                                </Panel.Heading>\r\n                                <Panel.Body>\r\n\r\n                                    <form>\r\n                                        <FormGroup\r\n                                            controlId=\"username\"\r\n\r\n                                        >\r\n\r\n                                            <FormControl\r\n                                                style={{ marginBottom: 10 }}\r\n                                                type=\"text\"\r\n                                                value={this.state.username}\r\n                                                placeholder=\"Login\"\r\n                                                onChange={this.handleChangeUsername}\r\n                                            />\r\n                                            <FormControl.Feedback />\r\n\r\n                                        </FormGroup>\r\n\r\n\r\n                                        <FormGroup\r\n                                            controlId=\"password\"\r\n\r\n                                        >\r\n\r\n                                            <FormControl\r\n                                                style={{ marginBottom: 10 }}\r\n                                                type=\"password\"\r\n                                                value={this.state.password}\r\n                                                placeholder=\"Senha\"\r\n                                                onChange={this.handleChangePassword}\r\n                                            />\r\n                                            <FormControl.Feedback />\r\n\r\n                                        </FormGroup>\r\n\r\n                                        <Button\r\n                                            bsStyle=\"primary\"\r\n                                            type=\"submit\"\r\n                                            onClick={this.login}\r\n                                        >\r\n\r\n                                            Entrar\r\n                                         </Button>\r\n                                    </form>\r\n\r\n                                </Panel.Body>\r\n                            </Panel></Col>\r\n\r\n                        <Col xs={6} md={4} style={{ alignContent: 'center' }}></Col>\r\n\r\n\r\n                    </Row></Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport TopBar from './components/topbar';\nimport ViewProduct from './components/viewProduct';\nimport AddProduct from './components/addProduct';\nimport Login from './components/login';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst routing = (\n\n\n  <Router>\n\n    <div>\n      <TopBar />\n\n      <Switch>\n\n        <Route exact path=\"/ViewProduct/:id\" component={ViewProduct} />\n        {localStorage.getItem(\"admin\") &&\n        <Route exact path=\"/AddProduct\" component={AddProduct} />}\n\n        {!localStorage.getItem(\"user\") &&\n        <Route exact path=\"/Login\" component={Login} />}\n        <Route path=\"*\" component={App} />\n\n      </Switch>\n\n\n\n    </div>\n  </Router>\n)\n\n\n\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}